volumes:
  pgdata:
  static:
  socket:

services:
  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile-nginx
    container_name: nginx
    restart: unless-stopped
    volumes:
      - static:/static
      - socket:/socket
    ports: 
      - 8000:8000
    healthcheck:
      test: ["CMD-SHELL", "curl -f nginx:8000/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 5s

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 5s
  django:
    container_name: django
    build: .. 
    expose:
      - 8000
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      nginx:
        condition: service_started
    env_file:
      - .env
    volumes:
      - static:/app/static
      - socket:/app/socket